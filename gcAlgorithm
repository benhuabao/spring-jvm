1:标记-清除
首先找到内存中需要回收的对象,并且把他们给标记出来,然后再把标记的给清除掉

缺点:会产生垃圾碎片,导致后续内存在分配较大对象的时候,无法找到连续内存,而触发下一次GC
1)标记和清除两个过程都比较耗时间,效率低
2)会产生内存碎片

适合在老年代
------------------------
2:复制算法
将内存分为两个相等的部分,其中一块儿空着,将存活的对象复制到空的一块中,然后将剩余的清除掉.
缺点:内存利用率不足,在对象存货了较高时,要进行较多的复制操作,效率会变低.

因为要给一半的空间出去空着,所以这种算法基本不会用在老年代,适合在新生代
-----------------------
3:标记-整理
标记需要回收的对象,让所有存活对象向一端移动,然后直接清除掉端后的内存.
缺点:整理会花时间,

适合在老年代
--------------------------
因此一般使用分代算法,
在不用的代使用不同算法,
young区:复制算法(对象生命周期短,内存小,对象少,复制对象少,效率高)
old区:标记清除或者是标记整理(内存大,复制浪费内存,对象存活时间长)

